{"ast":null,"code":"var _jsxFileName = \"/Users/Nic/Desktop/Development/practice/test/src/App.js\";\nimport React from 'react';\nimport logo from \"./logo.svg\";\nimport './App.css';\n\nclass App extends Comment {\n  constructor(...args) {\n    super(...args);\n    this.state = {};\n  }\n\n  runTest(e) {\n    console.log(\"test works\");\n  }\n\n  render() {\n    return React.createElement(Container, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 16\n      },\n      __self: this\n    }, React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 17\n      },\n      __self: this\n    }, React.createElement(Col, {\n      xs: 12,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18\n      },\n      __self: this\n    }, React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      style: {\n        marginTop: \"20px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20\n      },\n      __self: this\n    }, \"The program application process consists of three phases. All candidates: Scholarship applicants, partial, full, and or paid applicants must complete all three phases.\")), React.createElement(Row, {\n      style: {\n        marginLeft: \"20px\",\n        marginTop: \"20px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22\n      },\n      __self: this\n    }, React.createElement(Col, {\n      xs: 10,\n      lg: 4,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23\n      },\n      __self: this\n    }, React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24\n      },\n      __self: this\n    }, \"Phase I:\"), React.createElement(Col, {\n      xs: 10,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26\n      },\n      __self: this\n    }, \"You provide personal background information (Allow for 15 to 30 minutes)\"))), React.createElement(Col, {\n      xs: 10,\n      lg: 4,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29\n      },\n      __self: this\n    }, React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30\n      },\n      __self: this\n    }, \"Phase II:\"), React.createElement(Col, {\n      xs: 10,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32\n      },\n      __self: this\n    }, \"Short Essays, Video, and Coding challenges are required for all candidates. (Allow for 2 - 4 hours if you have coding experience. If you don't, then expect 4 to 6 hours to go through the recommended tutorials and coding questions)\"))), React.createElement(Col, {\n      xs: 10,\n      lg: 4,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    }, React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    }, \"Phase III:\"), React.createElement(Col, {\n      xs: 10,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }, \"Each candidate will be required to do either an in person or video interview, scheduled through our program manager.\")))), React.createElement(\"hr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }), React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }, React.createElement(Col, {\n      className: \"alignCenter\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }, React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }, \"Completing online Application:\"), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }, \"To preserve your data, do not close your browser session until Phase I is complete. Upon completion of Phase I you will receive a link via email to begin Phase II. Questions? Contact us at\\u202Fsucceed@nebulaacademyny.com. Phone: 631-468-7475\"))), React.createElement(\"hr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }), React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }, React.createElement(Col, {\n      className: \"formContainer\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }, React.createElement(Iframe, {\n      url: \"https://forms.office.com/Pages/ResponsePage.aspx?id=DYC-61190U-xMgLVy3lNnmhMOgtjMC5JhCXq1Gwz5J5UQjlZMUZKSVFNRUxYVEpTRThOMlo2UEoxTyQlQCN0PWcu&embed=true\",\n      width: \"850px\",\n      height: \"800px\",\n      id: \"myId\",\n      className: \"form\",\n      display: \"initial\",\n      position: \"relative\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }))), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }))));\n  }\n\n}\n\n;\nexport default App;","map":{"version":3,"sources":["/Users/Nic/Desktop/Development/practice/test/src/App.js"],"names":["React","App","Comment","state","runTest","e","console","log","render","marginTop","marginLeft"],"mappings":"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","sourcesContent":["import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\n\n\n\nclass App extends Comment {\n  state = {\n\n  }\n  runTest (e) {\n    console.log(\"test works\")\n  }\n  render() {\n    return (\n      <Container>\n          <Row>\n              <Col xs={12}>\n                  <Row>\n                      <h2 style={{marginTop:\"20px\"}}>The program application process consists of three phases. All candidates: Scholarship applicants, partial, full, and or paid applicants must complete all three phases.</h2>\n                  </Row>\n                  <Row style={{marginLeft:\"20px\", marginTop:\"20px\"}}>\n                      <Col xs={10} lg={4}>\n                          <h3>Phase I:</h3>\n                          <Col xs={10}>\n                              <p>You provide personal background information (Allow for 15 to 30 minutes)</p>\n                          </Col>\n                      </Col>\n                      <Col xs={10} lg={4}>\n                          <h3>Phase II:</h3>\n                              <Col xs={10}>\n                                  <p>Short Essays, Video, and Coding challenges are required for all candidates. (Allow for 2 - 4 hours if you have coding experience. If you don't, then expect 4 to 6 hours to go through the recommended tutorials and coding questions)</p>\n                              </Col>\n                      </Col>\n                      <Col xs={10} lg={4}>\n                          <h3>Phase III:</h3>\n                              <Col xs={10} >\n                                  <p>Each candidate will be required to do either an in person or video interview, scheduled through our program manager.</p>\n                                  \n                              </Col>\n                      </Col>\n                  </Row>\n                  <hr></hr>\n                  <Row>\n                      <Col className=\"alignCenter\">\n                          <h3>Completing online Application:</h3>\n                              <p>To preserve your data, do not close your browser session until Phase I is complete. Upon completion of Phase I you will receive a link via email to begin Phase II. Questions? Contact us at succeed@nebulaacademyny.com. Phone: 631-468-7475</p>\n                      </Col>\n                  </Row>\n                  <hr></hr>\n                  <Row>\n                      <Col className=\"formContainer\">\n                          <Iframe url=\"https://forms.office.com/Pages/ResponsePage.aspx?id=DYC-61190U-xMgLVy3lNnmhMOgtjMC5JhCXq1Gwz5J5UQjlZMUZKSVFNRUxYVEpTRThOMlo2UEoxTyQlQCN0PWcu&embed=true\"\n                              width=\"850px\"\n                              height=\"800px\"\n                              id=\"myId\"\n                              className=\"form\"\n                              display=\"initial\"\n                              position=\"relative\"\n                              />\n                      </Col>\n                  </Row>\n                  <br/>       \n                  \n                  \n                  \n                  \n                  \n                  {/* <Form className=\"manualContainer\" onSubmit={(e) => this.handleSubmit(e)}>\n                      <Form.Row>\n                          <Form.Group as={Col}>\n                              <Form.Label>First Name</Form.Label>\n                              <Form.Control required onChange={(event) => {this.setState({firstName: event.target.value})}} placeholder=\"First Name\" />\n                          </Form.Group>\n                          <Form.Group as={Col} >\n                              <Form.Label>Last Name</Form.Label>\n                              <Form.Control required onChange={(event) => {this.setState({lastName: event.target.value})}} placeholder=\"Last Name\" />\n                          </Form.Group>\n                      </Form.Row>\n                      <Form.Row>\n                          <Form.Group as={Col}>\n                              <Form.Label>Email</Form.Label>\n                              <Form.Control required input onChange={(event) => {this.setState({email: event.target.value})}} type=\"email\" placeholder=\"Enter Email\" />\n                          </Form.Group>\n                          <Form.Group as={Col} controlId=\"formGridPhone\">\n                              <Form.Label>Phone</Form.Label>\n                              <Form.Control required onChange={(event) => {this.setState({phone: event.target.value})}} placeholder=\"Enter Phone Number\" />\n                          </Form.Group>\n                      </Form.Row>\n                      <Form.Group controlId=\"formGridAddress1\">\n                          <Form.Label>Address</Form.Label>\n                          <Form.Control required onChange={(event) => {this.setState({address: event.target.value})}} placeholder=\"1234 Main St\" />\n                      </Form.Group>\n                      <Form.Group controlId=\"formGridAddress2\">\n                          <Form.Label>Address 2</Form.Label>\n                          <Form.Control onChange={(event) => {this.setState({address2: event.target.value})}}placeholder=\"Apartment, studio, or floor\" />\n                      </Form.Group>\n                      <Form.Row>\n                          <Form.Group as={Col} controlId=\"formGridCity\">\n                              <Form.Label>City</Form.Label>\n                              <Form.Control required onChange={(event) => {this.setState({city: event.target.value})}} placeholder=\"New York City\"/>\n                          </Form.Group>\n\n                          <Form.Group as={Col} controlId=\"formGridState\">\n                              <Form.Label>State</Form.Label>\n                              <Form.Control required onChange={(event) => {this.setState({state: event.target.value})}} placeholder=\"New York\"/>\n                          </Form.Group>\n\n                          <Form.Group as={Col} controlId=\"formGridZip\">\n                              <Form.Label>Zip</Form.Label>\n                              <Form.Control required onChange={(event) => {this.setState({zip: event.target.value})}}placeholder=\"10001\"/>\n                          </Form.Group>\n                      </Form.Row>\n                      <Form.Row>\n                          <Form.Group as={Col} controlId=\"formGridOnlineProfile1\">\n                              <Form.Label>Online Profile 1</Form.Label>\n                              <Form.Control onChange={(event) => {this.setState({onlineProfile1: event.target.value})}} placeholder=\"Ex: LinkedIn\"/>\n                          </Form.Group>\n\n                          <Form.Group as={Col} controlId=\"formGridOnlineProfile2\">\n                              <Form.Label>Online Profile 2</Form.Label>\n                              <Form.Control onChange={(event) => {this.setState({onlineProfile2: event.target.value})}} placeholder=\"Ex: GitHub\"/>\n                          </Form.Group>\n\n                          <Form.Group as={Col} controlId=\"formGridOnlineProfile3\">\n                              <Form.Label>Online Profile 3</Form.Label>\n                              <Form.Control onChange={(event) => {this.setState({onlineProfile3: event.target.value})}} placeholder=\"Ex: Portfolio\"/>\n                          </Form.Group>\n                      </Form.Row>\n                          <Form.Group controlId=\"FormControlShortBio\">\n                              <Form.Label>Short Bio</Form.Label>\n                              <Form.Control required onChange={(event) => {this.setState({shortBio: event.target.value})}} as=\"textarea\" rows=\"3\" placeholder=\"Tell us about yourself.\" />\n                          </Form.Group>\n                          <Form.Group controlId=\"FormControlHearProgram\">\n                              <Form.Label>How did you hear about our program?</Form.Label>\n                              <Form.Control required onChange={(event) => {this.setState({hearAboutProgram: event.target.value})}}as=\"select\">\n                                  <placeholder>Select</placeholder>\n                                  <option>LinkedIn</option>\n                                  <option>Facebook</option>\n                                  <option>Google</option>\n                                  <option>Twitter</option>\n                                  <option>Facebook</option>\n                                  <option>Veterans Affaris</option>\n                                  <option>Operation Code</option>\n                                  <option>Hiring Heroes</option>\n                                  <option>IVMF</option>\n                                  <option>Friend/Family</option>\n                                  <option>Warrior Scholar</option>\n                                  <option>Course Report</option>\n                                  <option>GirHub</option>\n                                  <option>Reddit</option>\n                                  <option>Article</option>\n                                  <option>Other</option>\n                              </Form.Control>\n                          </Form.Group>\n                          <Form.Group required controlId=\"FormControlCohort\">\n                              <Form.Label>Which cohort are you applying to?</Form.Label>\n                              <Form.Control required as=\"select\" >\n                                  <option aria-label=\"option 0\" label=\"Select\"></option>\n                                  <option onChange={(event) => {this.setState({ cohortMarToAug: event.target.value })}} aria-label=\"option 1\" label=\"March 2 - August 7 2019\"/> \n                                  <option onChange={(event) => {this.setState({ cohortSeptToFeb: event.target.value })}} aria-label=\"option 2\" label=\"September 1 - February 26 2019\"/>  \n                              </Form.Control>\n                          </Form.Group>\n                          <Form.Group controlId=\"FormControlHowAttend\">\n                              <Form.Label>How would you like to attend?</Form.Label>\n                                  <Form.Check onChange={(event) => {this.setState({ howAttendVirtual: event.target.value })}} aria-label=\"option 1\" label=\"Virtual\"/> \n                                  <Form.Check onChange={(event) => {this.setState({ howAttendInperson: event.target.value })}} aria-label=\"option 2\" label=\"In-Person (Syosset, NY)\"/> \n                          </Form.Group>\n                          <Form.Group controlId=\"FormControlCohort\">\n                              <Form.Label>What is your highest education level?</Form.Label>\n                              <Form.Control required onChange={(event) => {this.setState({highestEDU: event.target.value})}} as=\"select\">\n                                  <option>High School</option>\n                                  <option>Associate Degree</option>\n                                  <option>Bacherlors Degree</option>\n                                  <option>Masters</option>\n                                  <option>Doctorate</option>\n                              </Form.Control>\n                          </Form.Group>\n                          <Form.Group controlId=\"formGridOnlineProfile3\">\n                              <Form.Label>List any other education not included above:</Form.Label>\n                              <Form.Control onChange={(event) => {this.setState({eduNotIncluded: event.target.value})}} placeholder=\"Certifications, self-learning, etc..\"/>\n                          </Form.Group>\n                          <Form.Group controlId=\"FormControlCohort\">\n                              <Form.Label>Which of the following do you identify with (select all that apply)?</Form.Label>\n                              <Form.Check onChange={(event) => {this.setState({  identifyCaucasian: event.target.value })}} aria-label=\"option 1\" label=\"Caucasian\"/> \n                              <Form.Check onChange={(event) => {this.setState({  identifyAfricanAmerican: event.target.value })}} aria-label=\"option 2\" label=\"African American\"/> \n                              <Form.Check onChange={(event) => {this.setState({  identifyHispanicLatin: event.target.value })}} aria-label=\"option 3\" label=\"Hispanic or Latin Origin\"/> \n                              <Form.Check onChange={(event) => {this.setState({  identifyAsian: event.target.value })}} aria-label=\"option 7\" label=\"Asian\"/> \n                              <Form.Check onChange={(event) => {this.setState({  identifyNativeAmerican: event.target.value })}} aria-label=\"option 4\" label=\"Native American\"/> \n                              <Form.Check onChange={(event) => {this.setState({  identifyNativeHawaiianPacificIslander: event.target.value })}} aria-label=\"option 5\" label=\"Native Hawaiian or Other Pacific Islander\"/> \n                              <Form.Check onChange={(event) => {this.setState({  identifyMiddleEastNorthaAfrican: event.target.value })}} aria-label=\"option 5\" label=\"Middle Eastern or North African\"/> \n                              <Form.Check onChange={(event) => {this.setState({  identifyFemale: event.target.value })}} aria-label=\"option 5\" label=\"Female\"/>\n                              <Form.Check onChange={(event) => {this.setState({  identifyMale: event.target.value })}} aria-label=\"option 5\" label=\"Male\"/> \n                              <Form.Check onChange={(event) => {this.setState({  identifyNonbinary: event.target.value })}} aria-label=\"option 5\" label=\"Nonbinary\"/> \n                              <Form.Check onChange={(event) => {this.setState({  identifyLgbtqiap: event.target.value })}} aria-label=\"option 5\" label=\"LGBTQIA+\"/> \n                              <Form.Check onChange={(event) => {this.setState({  identifyOther: event.target.value })}} aria-label=\"option 5\" label=\"Other\"/> \n                          </Form.Group>\n                          <Form.Group required controlId=\"formGridOnlineProfile3\">\n                              <Form.Label>What are your primary intentions for enrolling in this program?</Form.Label>\n                              <Form.Control required onChange={(e) => this.handleIntentionsChange(e)} as=\"select\">\n                                  <option aria-label=\"option 0\" label=\"Select\"/> \n                                  <option aria-label=\"option 1\" label=\"I intend to start a new lob within 180 days of graduating the program.\"/> \n                                  <option aria-label=\"option 2\" label=\"I intend to start a business or become a self-employed contractor upon graduation.\"/> \n                                  <option aria-label=\"option 3\" label=\"I intend to remain with my current employer upon graduation.\"/> \n                                  <option aria-label=\"option 4\" label=\"I am attending the program to learn new skills for self-enrichment and do not intent to pursue a job upon graduation.\"/> \n                                  <option aria-label=\"option 5\" label=\"I am attending the program in preparation to enroll in an accredited post-secondary institution and do not intend to pursue a job upon graduation.\"/> \n                                  <option aria-label=\"option 6\" label=\"Other\"/> \n                              </Form.Control>\n                          </Form.Group>\n                          <Form.Group controlId=\"formGridOnlineProfile3\">\n                              <Form.Label>Do you have coding experience?</Form.Label>\n                              <Form.Control required onChange={(e) => this.handleCodingXPChange(e)} as=\"select\">\n                                  <option aria-label=\"option 0\" label=\"Select\"/> \n                                  <option aria-label=\"option 1\" label=\"None\"/> \n                                  <option aria-label=\"option 2\" label=\"Beginner (100 hours or less of tutorials)\"/> \n                                  <option aria-label=\"option 3\" label=\"Intermediate (Three or fewer classes and personal projects)\"/> \n                                  <option aria-label=\"option 4\" label=\"Advanced (Degree or professional experience)\"/> \n                              </Form.Control>\n                          </Form.Group> \n                          <Form.Group controlId=\"formGridOnlineProfile3\">\n                              <Form.Label>Are you interested in any of the following scholarships?</Form.Label>\n                              <Form.Check onChange={(event) => {this.setState({ scholarshipVeteran: event.target.value })}} aria-label=\"option 1\" label=\"Veteran In Person\"/> \n                              <Form.Check onChange={(event) => {this.setState({ scholarshipWomenReEntry: event.target.value })}} aria-label=\"option 2\" label=\"Women re-entering the workforce\"/> \n                              <Form.Check onChange={(event) => {this.setState({ scholarshipHispanicLatin: event.target.value })}} aria-label=\"option 3\" label=\"Hispanic or Latin Origin\"/> \n                              <Form.Check onChange={(event) => {this.setState({ scholarshipAsian: event.target.value })}} aria-label=\"option 7\" label=\"Asian\"/> \n                              <Form.Check onChange={(event) => {this.setState({ scholarshipNativeAmerican: event.target.value })}} aria-label=\"option 4\" label=\"Native American\"/> \n                              <Form.Check onChange={(event) => {this.setState({ scholarshipNativeHawaiianPacificIslander: event.target.value })}} aria-label=\"option 5\" label=\"Native Hawaiian or Other Pacific Islander\"/> \n                              <Form.Check onChange={(event) => {this.setState({ scholarshipMiddleEastNorthaAfrican: event.target.value })}} aria-label=\"option 5\" label=\"Middle Eastern or North African\"/> \n                              <Form.Check onChange={(event) => {this.setState({ scholarshipFemale: event.target.value })}} aria-label=\"option 5\" label=\"Female\"/>\n                              <Form.Check onChange={(event) => {this.setState({ scholarshipMale: event.target.value })}} aria-label=\"option 5\" label=\"Male\"/> \n                              <Form.Check onChange={(event) => {this.setState({ scholarshipNonbinary: event.target.value })}} aria-label=\"option 5\" label=\"Nonbinary\"/> \n                              <Form.Check onChange={(event) => {this.setState({ scholarshipLGBTQIAP: event.target.value })}} aria-label=\"option 5\" label=\"LGBTQIA+\"/> \n                              <Form.Check onChange={(event) => {this.setState({ scholarshipOther: event.target.value })}} aria-label=\"option 5\" label=\"Other\"/> \n                          </Form.Group>\n                          <Form.Group controlId=\"formGridOnlineProfile3\">\n                              <Form.Label>If you are a VET do you intend to use the VET TEC program to pay for tuition and housing?</Form.Label>\n                              <Form.Control required onChange={(e) => this.handleVETTECChange(e)} as=\"select\">\n                                  <option aria-label=\"option 0\" label=\"Select\"/> \n                                  <option aria-label=\"option 2\" label=\"Yes\"/> \n                                  <option aria-label=\"option 3\" label=\"No\"/> \n                                  <option aria-label=\"option 0\" label=\"I am not a veteran\"/> \n                              </Form.Control>\n                          </Form.Group>\n                          <Form.Group controlId=\"formGridOnlineProfile3\">\n                              <Form.Label>If you are a VET do you have GI BILL benefits you would like to use?</Form.Label>\n                              <Form.Control required onChange={(e) => this.handleGIChange(e)} as=\"select\">\n                                  <option aria-label=\"option 0\" label=\"Select\"/> \n                                  <option aria-label=\"option 2\" label=\"Yes\"/> \n                                  <option aria-label=\"option 3\" label=\"No\"/> \n                                  <option aria-label=\"option 0\" label=\"I am not a veteran\"/> \n                              </Form.Control>\n                          </Form.Group>\n                          <Form.Group controlId=\"formGridOnlineProfile3\">\n                              <Form.Label>Are you currently authorized to work in the US?</Form.Label>\n                              <Form.Control required as=\"select\" onChange={(e) => this.handleAuthChange(e)}>\n                                  <option aria-label=\"option 0\" label=\"Select\"/> \n                                  <option aria-label=\"option 1\" label=\"Yes\"/> \n                                  <option aria-label=\"option 2\"  label=\"No\"/> \n                              </Form.Control>\n                          </Form.Group> \n                          <Form.Group controlId=\"formGridOnlineProfile3\">\n                              <Form.Label>Are you a US citizen or permanent resident?</Form.Label>\n                              <Form.Control required as=\"select\" onChange={(e) => this.handleResChange(e)}>\n                                  <option aria-label=\"option 0\" label=\"Select\"/> \n                                  <option aria-label=\"option 1\" label=\"Yes\"/> \n                                  <option aria-label=\"option 2\" label=\"No\"/> \n                              </Form.Control>\n                          </Form.Group>\n                          <Form.Group required  controlId=\"formGridOnlineProfile3\">\n                              <Form.Label>I am atleast 18 years old and I have at least a HS diploma or equivalent. I understand I will be asked to provide proof of my prior educational history if I enroll.</Form.Label>\n                                  <Form.Control onChange={() => {this.setState({acknowledgement: 'acknowledged'})}} required as=\"select\">\n                                      <option aria-label=\"option 0\" label=\"Select\"/> \n                                      <option aria-label=\"option 1\" label=\"I Acknowledge\"/> \n                                  </Form.Control>\n                          </Form.Group> \n                      <Button variant=\"primary\" type=\"submit\">\n                          Submit\n                      </Button>\n                  </Form> */}\n              </Col>\n          </Row>\n      </Container>\n    )\n  }\n};\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}